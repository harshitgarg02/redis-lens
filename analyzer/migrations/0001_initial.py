# Generated by Django 4.2.23 on 2025-08-24 17:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('master_ip', models.GenericIPAddressField()),
                ('master_port', models.IntegerField(default=6379)),
                ('session_name', models.CharField(blank=True, max_length=100)),
                ('total_instances_found', models.IntegerField(default=0)),
                ('successful_connections', models.IntegerField(default=0)),
                ('failed_connections', models.IntegerField(default=0)),
                ('analysis_start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('analysis_end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('partial', 'Partial')], default='running', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='redis_analysis_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnomalyRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_id', models.CharField(max_length=20, unique=True)),
                ('directives', models.TextField()),
                ('category', models.CharField(choices=[('client_management', 'Client Management'), ('logging', 'Logging'), ('process_management', 'Process Management'), ('memory', 'Memory'), ('network', 'Network'), ('security', 'Security'), ('performance', 'Performance'), ('data_structures', 'Data Structures'), ('persistence', 'Persistence'), ('replication', 'Replication')], max_length=30)),
                ('anomaly_description', models.TextField()),
                ('detection_logic', models.TextField()),
                ('recommended_state', models.TextField()),
                ('severity', models.CharField(choices=[('notice', 'Notice'), ('warning', 'Warning'), ('critical', 'Critical')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['rule_id'],
            },
        ),
        migrations.CreateModel(
            name='RedisInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('port', models.IntegerField(default=6379)),
                ('role', models.CharField(choices=[('master', 'Master'), ('slave', 'Slave'), ('replica', 'Replica')], max_length=10)),
                ('master_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('master_port', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('error', 'Error')], default='offline', max_length=10)),
                ('version', models.CharField(blank=True, max_length=50)),
                ('uptime_seconds', models.BigIntegerField(blank=True, null=True)),
                ('connected_clients', models.IntegerField(blank=True, null=True)),
                ('max_clients', models.IntegerField(blank=True, null=True)),
                ('master_name', models.CharField(blank=True, max_length=100, null=True)),
                ('used_memory', models.BigIntegerField(blank=True, null=True)),
                ('used_memory_human', models.CharField(blank=True, max_length=20)),
                ('maxmemory', models.BigIntegerField(blank=True, null=True)),
                ('maxmemory_human', models.CharField(blank=True, max_length=20)),
                ('keyspace_hits', models.BigIntegerField(blank=True, null=True)),
                ('keyspace_misses', models.BigIntegerField(blank=True, null=True)),
                ('total_keys', models.BigIntegerField(blank=True, null=True)),
                ('total_commands_processed', models.BigIntegerField(blank=True, null=True)),
                ('raw_info_output', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('analysis_session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='analyzer.analysissession')),
            ],
            options={
                'ordering': ['role', 'ip_address'],
                'unique_together': {('analysis_session', 'ip_address', 'port')},
            },
        ),
        migrations.CreateModel(
            name='SentinelAnalysisSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sentinel_ip', models.GenericIPAddressField()),
                ('sentinel_port', models.IntegerField(default=26379)),
                ('analysis_type', models.CharField(choices=[('config', 'Sentinel Configuration Analysis'), ('discovery', 'Sentinel Master Discovery Analysis'), ('full', 'Full Sentinel Analysis'), ('topology', 'Topology Discovery Analysis')], max_length=10)),
                ('session_name', models.CharField(blank=True, max_length=100)),
                ('total_sentinels_found', models.IntegerField(default=0)),
                ('total_masters_found', models.IntegerField(default=0)),
                ('total_instances_analyzed', models.IntegerField(default=0)),
                ('successful_connections', models.IntegerField(default=0)),
                ('failed_connections', models.IntegerField(default=0)),
                ('analysis_start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('analysis_end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('running', 'Running'), ('completed', 'Completed'), ('failed', 'Failed'), ('partial', 'Partial')], default='running', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sentinel_analysis_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SentinelInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('port', models.IntegerField(default=26379)),
                ('status', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('error', 'Error')], default='offline', max_length=10)),
                ('version', models.CharField(blank=True, max_length=50)),
                ('uptime_seconds', models.BigIntegerField(blank=True, null=True)),
                ('sentinel_id', models.CharField(blank=True, max_length=100)),
                ('known_sentinels', models.IntegerField(blank=True, null=True)),
                ('known_slaves', models.IntegerField(blank=True, null=True)),
                ('masters_count', models.IntegerField(blank=True, null=True)),
                ('connected_clients', models.IntegerField(blank=True, null=True)),
                ('max_clients', models.IntegerField(blank=True, null=True)),
                ('raw_info_output', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('analysis_session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sentinels', to='analyzer.sentinelanalysissession')),
            ],
            options={
                'ordering': ['ip_address'],
                'unique_together': {('analysis_session', 'ip_address', 'port')},
            },
        ),
        migrations.CreateModel(
            name='SentinelConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter_name', models.CharField(max_length=100)),
                ('parameter_value', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('general', 'General'), ('monitoring', 'Monitoring'), ('notification', 'Notification'), ('failover', 'Failover'), ('security', 'Security'), ('networking', 'Networking'), ('logging', 'Logging'), ('other', 'Other')], default='other', max_length=20)),
                ('master_name', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sentinel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configurations', to='analyzer.sentinelinstance')),
            ],
            options={
                'ordering': ['category', 'parameter_name'],
                'unique_together': {('sentinel', 'parameter_name', 'master_name')},
            },
        ),
        migrations.CreateModel(
            name='ReplicationInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('replication_offset', models.BigIntegerField(blank=True, null=True)),
                ('lag_in_seconds', models.IntegerField(blank=True, null=True)),
                ('replication_state', models.CharField(blank=True, max_length=50)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('master_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='master_replications', to='analyzer.redisinstance')),
                ('slave_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slave_replications', to='analyzer.redisinstance')),
            ],
            options={
                'unique_together': {('master_instance', 'slave_instance')},
            },
        ),
        migrations.CreateModel(
            name='RedisConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter_name', models.CharField(max_length=100)),
                ('parameter_value', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('general', 'General'), ('memory', 'Memory'), ('persistence', 'Persistence'), ('replication', 'Replication'), ('security', 'Security'), ('networking', 'Networking'), ('logging', 'Logging'), ('slowlog', 'Slowlog'), ('clients', 'Clients'), ('modules', 'Modules'), ('other', 'Other')], default='other', max_length=20)),
                ('is_default', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configurations', to='analyzer.redisinstance')),
            ],
            options={
                'ordering': ['category', 'parameter_name'],
                'unique_together': {('instance', 'parameter_name')},
            },
        ),
        migrations.CreateModel(
            name='MonitoredMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('master_name', models.CharField(max_length=100)),
                ('master_ip', models.GenericIPAddressField()),
                ('master_port', models.IntegerField(default=6379)),
                ('status', models.CharField(choices=[('master', 'Master'), ('down', 'Down'), ('failover', 'Failover in Progress'), ('disconnected', 'Disconnected')], default='master', max_length=15)),
                ('quorum', models.IntegerField(blank=True, null=True)),
                ('down_after_milliseconds', models.IntegerField(blank=True, null=True)),
                ('failover_timeout', models.IntegerField(blank=True, null=True)),
                ('parallel_syncs', models.IntegerField(blank=True, null=True)),
                ('last_ping_sent', models.IntegerField(blank=True, null=True)),
                ('last_ok_ping_reply', models.IntegerField(blank=True, null=True)),
                ('last_ping_reply', models.IntegerField(blank=True, null=True)),
                ('num_slaves', models.IntegerField(blank=True, null=True)),
                ('num_other_sentinels', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('redis_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='analyzer.redisinstance')),
                ('sentinel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitored_masters', to='analyzer.sentinelinstance')),
            ],
            options={
                'ordering': ['master_name'],
                'unique_together': {('sentinel', 'master_name')},
            },
        ),
        migrations.CreateModel(
            name='KeyspaceInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('database_name', models.CharField(max_length=20)),
                ('keys_count', models.BigIntegerField(default=0)),
                ('expires_count', models.BigIntegerField(blank=True, default=0, null=True)),
                ('avg_ttl', models.BigIntegerField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keyspace_info', to='analyzer.redisinstance')),
            ],
            options={
                'ordering': ['database_name'],
                'unique_together': {('instance', 'database_name')},
            },
        ),
        migrations.CreateModel(
            name='AnomalyDetection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('detected', 'Detected'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved'), ('false_positive', 'False Positive')], default='detected', max_length=15)),
                ('affected_configs', models.JSONField(default=dict)),
                ('detection_context', models.JSONField(default=dict)),
                ('notes', models.TextField(blank=True)),
                ('detected_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_anomalies', to=settings.AUTH_USER_MODEL)),
                ('redis_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anomalies', to='analyzer.redisinstance')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_anomalies', to=settings.AUTH_USER_MODEL)),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='detections', to='analyzer.anomalyrule')),
                ('sentinel_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='anomalies', to='analyzer.sentinelinstance')),
            ],
            options={
                'ordering': ['-detected_at'],
                'unique_together': {('redis_instance', 'sentinel_instance', 'rule')},
            },
        ),
    ]
